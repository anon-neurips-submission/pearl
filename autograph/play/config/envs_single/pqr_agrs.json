{
  automaton: {
    spec: "G(p -> G(!q)) & G(q -> G(!p)) & F(at_home)",
    params: [
      {
        name: "at_home",
        func: "info_aut",
        params: {
          ap_name: "home"
        }
      },
      {
        name: "p",
        func: "mine_inventory",
        params: {
          inventory_item: "p",
          quantity: 1
        }
      },
      {
        name: "q",
        func: "mine_inventory",
        params: {
          inventory_item: "q",
          quantity: 1
        }
      }
    ],
    terminate_on_accept: true,
    terminate_on_fail: true,
    termination_fail_reward: 0,
    termination_accept_reward: 1
  },
  env: {
    type: "minecraft",
    max_episode_len: 100,
    max_len_reward: 0,
    params: {
      initial_position: null,
      placements: [
        {
          tile: {
            ap_name: "home",
            consumable: false,
            grid_letter: "H",
            inventory_modifier: {

            }
          },
          random_placements: 1
        },
        {
          tile: {
            ap_name: "p",
            consumable: true,
            grid_letter: "p",
            inventory_modifier: {
              "p": +1
            }
          },
          random_placements: 20
        },
        {
          tile: {
            ap_name: "q",
            consumable: true,
            grid_letter: "q",
            inventory_modifier: {
              "q": +1
            }
          },
          random_placements: 20
        }
      ],
      inventory: [
        {
          name: "p",
          capacity: 20,
          default_quantity: 0
        },
        {
          name: "q",
          capacity: 20,
          default_quantity: 0
        }
      ],
      shape: [
        10,
        10
      ]
    }
  },
  discount: 1,
  episode_runner: {
    type: "mcts_aut_episode",
    params: {
      batch_size: 4,
      num_batches: 20,
      c_aut: 1,
      c_puct: 1,
      c_sigma: 1,
      c_intrins: 0
    }
  },
  training: {
    learning_rate: .001,
    replay_buffer: 100000,
    train_rounds: 10,
    optimizer: "Adam",
    network: "mine_mazenet_v1",
    min_trace_to_train: 100
  }
}